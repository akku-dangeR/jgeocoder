import org.apache.commons.lang.StringUtilsimport com.sleepycat.persist.EntityStoreimport net.sourceforge.jgeocoder.tiger.Locationimport net.sourceforge.jgeocoder.tiger.ZipCodeimport com.sleepycat.persist.PrimaryIndeximport net.sourceforge.jgeocoder.tiger.ZipCodeDAOimport net.sourceforge.jgeocoder.tiger.ZipCodesDbimport java.util.zip.ZipFile
def zip = new ZipFile(Thread.currentThread().getContextClassLoader().getResource(/zip_codes.zip/).getFile())def f = zip.entries().nextElement()def r = new BufferedReader(new InputStreamReader(zip.getInputStream(f)))def db = new ZipCodesDb()try{  db.init(new File(/C:\Users\jliang\Desktop\bdbdata/), false, false)  EntityStore store = db.getStore()  ZipCodeDAO dao = new ZipCodeDAO(store)  PrimaryIndex idx = dao.getZipCodeByZip()    return; //uncomment to run    println "Processing $zip ..."  r.eachLine{    def items = it.split(',')    items.eachWithIndex() {t, i ->       items[i] = t.replaceAll('["\\s]','')    }    Location loc = new Location(_city:items[3], _state:items[4])    def lat = StringUtils.isBlank(items[1]) ? -1f : Float.valueOf(items[1].trim())    def lon = StringUtils.isBlank(items[2]) ? -1f : Float.valueOf(items[2].trim())    ZipCode z = new ZipCode(_zip:items[0],  _location:loc,        _lat:lat, _lon:lon, _county:items[5],  _zipClass:items[6])    idx.put(z)  }  println idx.get('19148').dump()}finally{  db.shutdown()}